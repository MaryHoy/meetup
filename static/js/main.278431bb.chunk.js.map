{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","event","showDetails","handleShowDetails","setState","this","className","name","local_date","onClick","description","Component","EventList","props","events","map","key","id","mockEvents","created","duration","date_in_series_pattern","status","time","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","group","join_mode","lat","lon","urlname","who","localized_location","country","region","timezone","link","visibility","member_pay_fee","getSuggestions","query","a","window","location","href","startsWith","city","localized_country_name","name_string","zip","getAccessToken","token","url","axios","get","result","data","getEvents","page","accessToken","localStorage","getItem","code","URLSearchParams","search","getOrRenewAccessToken","lastSavedTime","Date","now","type","tokenInfo","setItem","access_token","refresh_token","CitySearch","suggestions","handleInputChanged","value","target","then","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","numberOfEvents","App","defaultCity","response","length","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.278431bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    event: [],\n    showDetails: false\n  }\n\n  handleShowDetails = () => {\n    if(this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    }\n    else {\n      this.setState({ showDetails: false });\n    }\n  }\n\n  render() {\n    const showDetails = this.state.showDetails;\n\n    return(\n      <div className=\"event\">\n        <div className=\"event__Overview\">\n          <p className=\"event__Overview--name\">{this.state.event.name}</p>\n          <p className=\"event__Overview--localDate\">{this.state.event.local_date}</p>\n          <button className=\"details-btn\" onClick={() => this.handleShowDetails()}>show details</button>\n        </div>\n        {showDetails &&\n          <div className=\"event__Details\">\n            <p className=\"event__Details--description\">{this.state.event.description}</p>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  \n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","const mockEvents = {\n  city: {\n      id: 1007700,\n      city: 'München',\n      lat: 48.14,\n      lon: 11.58,\n      state: '',\n      country: 'de',\n      zip: 'meetup3',\n      member_count: 1257\n    },\n    events: [\n      {\n        created: 1582617054000,\n        duration: 5400000,\n        id: '268972894',\n        name: 'Live-Webinar: Der Design Your Life Kreislauf zur beruflichen Veränderung',\n        date_in_series_pattern: false,\n        status: 'upcoming',\n        time: 1583668800000,\n        local_date: '2020-03-08',\n        local_time: '13:00',\n        updated: 1582617163000,\n        utc_offset: 3600000,\n        waitlist_count: 0,\n        yes_rsvp_count: 22,\n        group: {\n          created: 1523352940000,\n          name: 'Design Your Life - Nachhaltig das eigene Leben gestalten',\n          id: 28110251,\n          join_mode: 'open',\n          lat: 48.139999389648438,\n          lon: 11.579999923706055,\n          urlname: 'Design-Your-Life-Nachhaltig-das-eigene-Leben-gestalten',\n          who: 'Mitglieder',\n          localized_location: 'München, Germany',\n          state: '',\n          country: 'de',\n          region: 'en_US',\n          timezone: 'Europe/Berlin'\n        },\n        link: 'https://www.meetup.com/Design-Your-Life-Nachhaltig-das-eigene-Leben-gestalten/events/268972894/',\n        description: '<p>registrieren um dann den EINWAHLLINK zu erhalten; also zwei Schritte um teilzunehmen.</p>  ',\n        visibility: 'public',\n        member_pay_fee: false\n    }\n  ]\n};\n\nexport { mockEvents };","import axios from 'axios';\nimport { mockEvents } from './mock-events';\n\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n    ];\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n      + query\n      + '&access_token=' + token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n\n  return [];\n};\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n      + '&access_token=' + token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    if (page) {\n      url += '&page=' + page;\n    }\n    if (lat && lon && page) {\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\n    }\n    const result = await axios.get(url);\n    const events = result.data.events;\n    return events;\n  }\n\n};\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if (!code) {\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=1gmibf6mc2aklf6r4k2mcflirc&response_type=code&redirect_uri=https://maryhoy.github.io/meetup/';\n      return null;\n    }\n\n    return getOrRenewAccessToken('get', code);\n  }\n\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n    return accessToken\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n\n  return getOrRenewAccessToken('renew', refreshToken);\n};\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url = 'https://17etdynl73.execute-api.us-west-1.amazonaws.com/dev/api/token/'\n      + key;\n  } else if (type === 'renew') {\n    // Lambda endpoint to get token by refresh_token\n    url = 'https://17etdynl73.execute-api.us-west-1.amazonaws.com/dev/api/refresh/'\n      + key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n};\n\nexport { getSuggestions, getEvents, getAccessToken };","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: []\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then(suggestions => this.setState({ suggestions }));\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          placeholder=\"Your City\"\n        />\n\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item =>\n            <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>\n              {item.name_string}\n            </li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    numberOfEvents: 32\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ numberOfEvents: value });\n    this.props.updateEvents(null, null, value);\n  }\n\n  render() {\n    return(\n      <div className=\"numberOfEvents\">\n        <label>Number of Events: </label>\n        <input\n          type=\"text\"\n          id=\"numberOfEvents__input\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\n\nclass App extends Component {\n\n  componentDidMount() {\n    getEvents().then(response => this.setState({ events: response }));\n  }\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: '',\n    lat: null,\n    lon: null\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if(lat && lon) {\n      getEvents(lat, lon, this.state.page).then(response => this.setState({ events: response, lat, lon }));\n    }\n    else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(response => this.setState({ events: response, page }));\n    }\n    else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(response => this.setState({ events: response }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={this.state.events.length} lat={this.state.lat} lon={this.state.lon} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}